<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="https://tomirgang.de/feed_style.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <tabi:metadata xmlns:tabi="https://github.com/welpo/tabi">
        <tabi:separator>
            •
        </tabi:separator>
        <tabi:about_feeds>This is a web feed, also known as an Atom feed. Subscribe by copying the URL from the address bar into your newsreader. Visit About Feeds to learn more and get started. It&#x27;s free.</tabi:about_feeds>
        <tabi:visit_the_site>Visit website</tabi:visit_the_site>
        <tabi:recent_posts>Recent posts</tabi:recent_posts>
        <tabi:last_updated_on>Updated on $DATE</tabi:last_updated_on>
        <tabi:default_theme>dark</tabi:default_theme>
        <tabi:post_listing_date>date</tabi:post_listing_date>
        <tabi:current_section>Linux</tabi:current_section>
    </tabi:metadata><title>Tom Irgang - Linux</title>
        <subtitle>tabi is a fast, lightweight, and modern Zola theme with multi-language support, optional JavaScript, and a perfect Lighthouse score.</subtitle>
    <link href="https://tomirgang.de/tags/linux/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://tomirgang.de/tags/linux/" rel="alternate" type="text/html"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-05-08T00:00:00+00:00</updated>
    <id>https://tomirgang.de/tags/linux/atom.xml</id><entry xml:lang="en">
        <title>Yocto builds auf Ubuntu 24.04</title>
        <published>2025-05-08T00:00:00+00:00</published>
        <updated>2025-05-08T00:00:00+00:00</updated>
        <author>
            <name>Tom Irgang</name>
        </author>
        <link rel="alternate" href="https://tomirgang.de/blog/yocto-ubuntu-24-04/" type="text/html"/>
        <id>https://tomirgang.de/blog/yocto-ubuntu-24-04/</id>
        
            <content type="html">&lt;p&gt;Ich bin inzwischen zurück zu Ubuntu gewechselt und verwende Ubuntu 24.04.
Als ich kürzlich mal wieder ein Yocto basiertes Projekt bauen wollte schlug der Build aufgrund der AppArmor Konfiguration fehl.
Die Lösung hat &lt;a href=&quot;https:&#x2F;&#x2F;discourse.ubuntu.com&#x2F;t&#x2F;ubuntu-24-04-lts-noble-numbat-release-notes&#x2F;39890&quot;&gt;ein Ubuntu Discourse Eintrag&lt;&#x2F;a&gt; geliefert,
die AppArmor Konfiguration musste angepasst werden um Bitbake das erstellen vun User Namespaces zu erlauben.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Config-File anlegen: &lt;code&gt;sudo vi &#x2F;etc&#x2F;apparmor.d&#x2F;bitbake&lt;&#x2F;code&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;abi&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;abi&#x2F;4.0&lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;include&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;tunables&#x2F;global&lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;&#x2F;home&#x2F;**&#x2F;bitbake&#x2F;bin&#x2F;bitbake&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flags=(unconfined&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;&#x2F;span&gt;) &lt;span class=&quot;z-punctuation z-definition z-compound z-braces z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;userns,&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-compound z-braces z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Und anschließend die Konfiguration laden: &lt;code&gt;sudo apparmor_parser -r &#x2F;etc&#x2F;apparmor.d&#x2F;bitbake&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        <summary type="html">AppArmor Config für Yocto builds anpassen ...</summary>
        </entry><entry xml:lang="en">
        <title>Libvirt&#x2F;Virt-Manager on Vanilla OS</title>
        <published>2024-10-31T00:00:00+00:00</published>
        <updated>2024-10-31T00:00:00+00:00</updated>
        <author>
            <name>Tom Irgang</name>
        </author>
        <link rel="alternate" href="https://tomirgang.de/blog/vanillaos-libvirt/" type="text/html"/>
        <id>https://tomirgang.de/blog/vanillaos-libvirt/</id>
        
            <content type="html">&lt;p&gt;Libvirt und QEMU auf &lt;em&gt;Vanilla OS 2.0 Orchid&lt;&#x2F;em&gt; installieren.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;packete-zum-immutable-root-hinzufugen&quot;&gt;&lt;a class=&quot;header-anchor no-hover-padding&quot; href=&quot;#packete-zum-immutable-root-hinzufugen&quot; aria-label=&quot;Anchor link for: packete-zum-immutable-root-hinzufugen&quot;&gt;&lt;span class=&quot;link-icon&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;
Packete zum Immutable Root hinzufügen&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;abroot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pkg add qemu-system&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;abroot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pkg add libvirt-daemon-system&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;abroot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pkg apply&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Die &lt;em&gt;libvirt-qemu&lt;&#x2F;em&gt; Gruppe und der &lt;em&gt;libvirt-qemu&lt;&#x2F;em&gt; Benutzer muss manuell angelegt werden,
sonst startet der libvirtd Dienst nicht.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;addgroup&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; libvirt-qemu&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;useradd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;s&lt;&#x2F;span&gt; &#x2F;bin&#x2F;false&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;g&lt;&#x2F;span&gt; kvm libvirt-qemu&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;G&lt;&#x2F;span&gt; kvm&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Danach ist ein Neustart notwendig damit die Änderungen aktiv werden.&lt;&#x2F;p&gt;
&lt;p&gt;Jetzt kann man Virt-Manager in einem Subsystem installieren
und damit virtuelle Maschinen anlegen.&lt;&#x2F;p&gt;
</content>
        <summary type="html">Virt-Manager auf Vanilla OS benutzen ...</summary>
        </entry><entry xml:lang="en">
        <title>Docker on Vanilla OS</title>
        <published>2024-10-30T00:00:00+00:00</published>
        <updated>2024-10-31T00:00:00+00:00</updated>
        <author>
            <name>Tom Irgang</name>
        </author>
        <link rel="alternate" href="https://tomirgang.de/blog/vanillaos-docker/" type="text/html"/>
        <id>https://tomirgang.de/blog/vanillaos-docker/</id>
        
            <content type="html">&lt;p&gt;Docker aus dem &lt;em&gt;docker.io&lt;&#x2F;em&gt;  auf &lt;em&gt;Vanilla OS 2.0 Orchid&lt;&#x2F;em&gt; als zusätzliche
Container Runtime installieren.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;docker-zum-immutable-root-hinzufugen&quot;&gt;&lt;a class=&quot;header-anchor no-hover-padding&quot; href=&quot;#docker-zum-immutable-root-hinzufugen&quot; aria-label=&quot;Anchor link for: docker-zum-immutable-root-hinzufugen&quot;&gt;&lt;span class=&quot;link-icon&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;
Docker zum Immutable Root hinzufügen&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;abroot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pgk add docker.io  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;abroot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pkg apply&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Die &lt;em&gt;docker&lt;&#x2F;em&gt; Gruppe muss manuell angelegt werden, sonst startet der Docker Dienst nicht.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;host-shell&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pkexec groupadd docker  &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Danach ist ein Neustart notwendig damit die Änderungen aktiv werden.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;docker-client-installieren&quot;&gt;&lt;a class=&quot;header-anchor no-hover-padding&quot; href=&quot;#docker-client-installieren&quot; aria-label=&quot;Anchor link for: docker-client-installieren&quot;&gt;&lt;span class=&quot;link-icon&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;
Docker Client installieren&lt;&#x2F;h2&gt;
&lt;p&gt;Docker Client in einem Debian-basierten Subsystem installieren:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt install docker.io&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Und den eigenen Benutzer zur &lt;em&gt;docker&lt;&#x2F;em&gt; Gruppe hinzufügen:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; usermod&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;aG&lt;&#x2F;span&gt; docker &lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;USER&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;warum-funktioniert-das&quot;&gt;&lt;a class=&quot;header-anchor no-hover-padding&quot; href=&quot;#warum-funktioniert-das&quot; aria-label=&quot;Anchor link for: warum-funktioniert-das&quot;&gt;&lt;span class=&quot;link-icon&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;
Warum funktioniert das?&lt;&#x2F;h2&gt;
&lt;p&gt;Der lokale Unix Socket &lt;em&gt;&#x2F;var&#x2F;run&#x2F;docker.sock&lt;&#x2F;em&gt; ist im Container verfügbar,
wodurch der Client mit dem Docker Daemon im Root Dateisystem kommuniziert.&lt;&#x2F;p&gt;
&lt;p&gt;Vorsicht: Da Docker mit &lt;em&gt;root&lt;&#x2F;em&gt; Rechten läuft kann der Benutzer im Subsystem
einen priviligierten Container starten und damit Änderungen am System vornehmen!&lt;&#x2F;p&gt;
</content>
        <summary type="html">Docker auf Vanilla OS installieren ...</summary>
        </entry><entry xml:lang="en">
        <title>Fractional Scaling mit Gnome</title>
        <published>2024-05-11T00:00:00+00:00</published>
        <updated>2020-10-30T00:00:00+00:00</updated>
        <author>
            <name>Tom Irgang</name>
        </author>
        <link rel="alternate" href="https://tomirgang.de/blog/gnome-fractional-scaling/" type="text/html"/>
        <id>https://tomirgang.de/blog/gnome-fractional-scaling/</id>
        
            <content type="html">&lt;p&gt;Ich werde alt, und die Schrift auf meinem High DPI Screen mit 100% Darstellung zu lesen wird langsam schwierig. Zum Glück bin ich über einen &lt;a href=&quot;https:&#x2F;&#x2F;canox.net&#x2F;2021&#x2F;08&#x2F;kurztipp-fractional-scaling-unter-gnome-aktivieren&#x2F;&quot;&gt;Blog-Post von Canox.net&lt;&#x2F;a&gt;  gestolpert, in dem erklärt wird wir man &lt;em&gt;Fractional Scaling&lt;&#x2F;em&gt; aktivieren kann.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;debian-bookworm&quot;&gt;&lt;a class=&quot;header-anchor no-hover-padding&quot; href=&quot;#debian-bookworm&quot; aria-label=&quot;Anchor link for: debian-bookworm&quot;&gt;&lt;span class=&quot;link-icon&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;
Debian Bookworm&lt;&#x2F;h2&gt;
&lt;p&gt;Auf Debian Bookworm muss mein ein Terminal öffnen und folgenden Befehl eingeben:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;gsettings&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; set org.gnome.mutter experimental-features &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;[&amp;#39;scale-monitor-framebuffer&amp;#39;]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nach dem nächsten Neustart hat man dann die Optionen 125%, 150% oder 175% Skalierung auszuwählen.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;vanilla-os&quot;&gt;&lt;a class=&quot;header-anchor no-hover-padding&quot; href=&quot;#vanilla-os&quot; aria-label=&quot;Anchor link for: vanilla-os&quot;&gt;&lt;span class=&quot;link-icon&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;
Vanilla OS&lt;&#x2F;h2&gt;
&lt;p&gt;Auf Vanilla OS hat obiges Kommando nicht funktioniert,
weil &lt;em&gt;gsettings&lt;&#x2F;em&gt; erst nicht installiert ware,
und dann die Kategorie &lt;em&gt;org.gnome.mutter&lt;&#x2F;em&gt; nicht existierte.&lt;&#x2F;p&gt;
&lt;p&gt;Die Lösung war direkt einen &lt;em&gt;dconf&lt;&#x2F;em&gt; Editor zu verwenden.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Editor installieren &lt;code&gt;sudo apt install dconf-editor gconf-cli&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Eintrag erstellen: &lt;code&gt;dconf write &#x2F;org&#x2F;gnome&#x2F;mutter&#x2F;experimental-features &quot;[&#x27;scale-monitor-framebuffer&#x27;]&quot;&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Ergebnis im UI-Editor betrachten: &lt;code&gt;dconf-editor&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Neustart, dann ist &lt;em&gt;Fractional Scaling&lt;&#x2F;em&gt; aktiviert.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        <summary type="html">Fractional Scaling in Gnome aktivieren ...</summary>
        </entry>
</feed>
